// Copyright (c) 2024 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@v0.1.0-esm/index.mjs";import{isPrimitive as e}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-string@v0.1.1-esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-array@v0.1.1-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.1.0-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.1.1-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-property@v0.1.1-esm/index.mjs";function p(t,r){return n(r)?i(r,"sep")&&(t.sep=r.sep,!e(t.sep))?new TypeError(s("invalid option. `%s` option must be a string. Option: `%s`.","sep",t.sep)):null:new TypeError(s("invalid argument. Options argument must be an object. Value: `%s`.",r))}function a(t,e){var r,s=e.length;if(0===s)return!1;for(r=0;r<s;r++){if(!o(t,e[r]))return!1;t=t[e[r]]}return!0}function m(t,n,i){var o,m,l;if(!(o=e(n))&&!r(n))throw new TypeError(s("invalid argument. Key path must be a string or a key array. Value: `%s`.",n));if(m={sep:"."},arguments.length>2&&(l=p(m,i)))throw l;return null!=t&&a(t,o?n.split(m.sep):n)}function l(t,n){var i,o,m,l;if(!(i=e(t))&&!r(t))throw new TypeError(s("invalid argument. Key path must be a string or a key array. Value: `%s`.",t));if(m={sep:"."},arguments.length>1&&(l=p(m,n)))throw l;return o=i?t.split(m.sep):t,d;function d(t){return null!=t&&a(t,o)}}t(m,"factory",l);export{m as default,l as factory};
//# sourceMappingURL=index.mjs.map
