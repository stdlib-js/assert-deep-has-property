{"version":3,"file":"index.mjs","sources":["../lib/validate.js","../lib/has.js","../lib/main.js","../lib/factory.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert-is-string' ).isPrimitive;\nvar isObject = require( '@stdlib/assert-is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\nvar format = require( '@stdlib/error-tools-fmtprodmsg' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination for function options\n* @param {Options} options - function options\n* @param {string} [options.sep] - key path separator\n* @returns {(Error|null)} error or null\n*\n* @example\n* var opts = {};\n* var options = {\n*     'sep': '/'\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( '01L2h', options ) );\n\t}\n\tif ( hasOwnProp( options, 'sep' ) ) {\n\t\topts.sep = options.sep;\n\t\tif ( !isString( opts.sep ) ) {\n\t\t\treturn new TypeError( format( '01L2i', 'sep', opts.sep ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasProp = require( '@stdlib/assert-has-property' );\n\n\n// MAIN //\n\n/**\n* Returns a boolean indicating whether an object has a nested property.\n*\n* @private\n* @param {*} v - value to test\n* @param {Array} props - list of properties defining a key path\n* @returns {boolean} boolean indicating whether an object has a nested property\n*/\nfunction deepHasProp( v, props ) {\n\tvar len = props.length;\n\tvar i;\n\tif ( len === 0 ) {\n\t\treturn false;\n\t}\n\tfor ( i = 0; i < len; i++ ) {\n\t\tif ( hasProp( v, props[i] ) ) {\n\t\t\tv = v[ props[ i ] ];\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// EXPORTS //\n\nmodule.exports = deepHasProp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert-is-string' ).isPrimitive;\nvar isArray = require( '@stdlib/assert-is-array' );\nvar format = require( '@stdlib/error-tools-fmtprodmsg' );\nvar copy = require( '@stdlib/utils-copy' );\nvar validate = require( './validate.js' );\nvar defaults = require( './defaults.json' );\nvar has = require( './has.js' );\n\n\n// MAIN //\n\n/**\n* Tests whether an object contains a nested key path, either own or inherited.\n*\n* @param {*} value - value to test\n* @param {(string|Array)} path - key path\n* @param {Options} [options] - function options\n* @param {string} [options.sep='.'] - key path separator\n* @throws {TypeError} second argument must be a string or key array\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {boolean} boolean indicating whether an object has a nested property\n*\n* @example\n* function Foo() {\n*     return this;\n* }\n* Foo.prototype.b = {\n*     'c': 'd'\n* };\n*\n* var obj = {\n*     'a': new Foo()\n* };\n*\n* var bool = deepHasProp( obj, 'a.b.c' );\n* // returns true\n*\n* @example\n* var arr = [\n*     {\n*         'a': [\n*             {\n*                 'b': [\n*                     { 'c': 'd' },\n*                     { 'e': 'f' }\n*                 ]\n*             }\n*         ]\n*     }\n* ];\n* var bool = deepHasProp( arr, '0.a.0.b.0.c' );\n* // returns true\n*\n* @example\n* var obj = { 'a': { 'b': { 'c': 'd' } } };\n* var bool = deepHasProp( obj, [ 'a', 'b', 'c' ] );\n* // returns true\n*\n* @example\n* var obj = { 'a': { 'b': { 'c': 'd' } } };\n* var bool = deepHasProp( obj, 'a/b/c', {\n*     'sep': '/'\n* });\n* // returns true\n*/\nfunction deepHasProp( value, path, options ) {\n\tvar isStr;\n\tvar props;\n\tvar opts;\n\tvar err;\n\n\tisStr = isString( path );\n\tif ( !isStr && !isArray( path ) ) {\n\t\tthrow new TypeError( format( '01L3M', path ) );\n\t}\n\topts = copy( defaults );\n\tif ( arguments.length > 2 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tif ( value === void 0 || value === null ) {\n\t\treturn false;\n\t}\n\tif ( isStr ) {\n\t\tprops = path.split( opts.sep );\n\t} else {\n\t\tprops = path;\n\t}\n\treturn has( value, props );\n}\n\n\n// EXPORTS //\n\nmodule.exports = deepHasProp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert-is-string' ).isPrimitive;\nvar isArray = require( '@stdlib/assert-is-array' );\nvar format = require( '@stdlib/error-tools-fmtprodmsg' );\nvar copy = require( '@stdlib/utils-copy' );\nvar validate = require( './validate.js' );\nvar defaults = require( './defaults.json' );\nvar has = require( './has.js' );\n\n\n// MAIN //\n\n/**\n* Returns a function which tests whether an object has a nested key path, either own or inherited.\n*\n* @param {(string|Array)} path - key path\n* @param {Options} [options] - function options\n* @param {string} [options.sep='.'] - key path separator\n* @throws {TypeError} first argument must be a string or key array\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Function} function which tests whether an object has a nested key path\n*\n* @example\n* var has = factory( 'a/b/c', {\n*     'sep': '/'\n* });\n*/\nfunction factory( path, options ) {\n\tvar isStr;\n\tvar props;\n\tvar opts;\n\tvar err;\n\tisStr = isString( path );\n\tif ( !isStr && !isArray( path ) ) {\n\t\tthrow new TypeError( format( '01L3M', path ) );\n\t}\n\topts = copy( defaults );\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tif ( isStr ) {\n\t\tprops = path.split( opts.sep );\n\t} else {\n\t\tprops = path;\n\t}\n\treturn deepHasProp;\n\n\t/**\n\t* Returns a boolean indicating whether an object has a nested key path, either own or inherited.\n\t*\n\t* @private\n\t* @param {*} value - value to test\n\t* @returns {boolean} boolean indicating whether an object has a nested property\n\t*\n\t* @example\n\t* var obj = { 'a': { 'b': { 'c': 'd' } } };\n\t* var bool = deepHasProp( obj );\n\t*/\n\tfunction deepHasProp( value ) {\n\t\tif ( value === void 0 || value === null ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn has( value, props );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether an object contains a nested key path, either own or inherited.\n*\n* @module @stdlib/assert-deep-has-property\n*\n* @example\n* var deepHasProp = require( '@stdlib/assert-deep-has-property' );\n*\n* function Foo() {\n*     return this;\n* }\n* Foo.prototype.b = {\n*     'c': 'd'\n* };\n*\n* var obj = {\n*     'a': new Foo()\n* };\n*\n* var bool = deepHasProp( obj, 'a.b.c' );\n* // returns true\n*\n* bool = deepHasProp( obj, [ 'a', 'b', 'c' ] );\n* // returns true\n*\n* @example\n* var factory = require( '@stdlib/assert-deep-has-property' ).factory;\n*\n* var has = factory( 'a/b/c', {\n*     'sep': '/'\n* });\n*\n* function Foo() {\n*     return this;\n* }\n* Foo.prototype.b = {\n*     'c': 'd'\n* };\n*\n* var obj = {\n*     'a': new Foo()\n* };\n*\n* var bool = has( obj );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar deepHasProp = require( './main.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( deepHasProp, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = deepHasProp;\n"],"names":["isString","require$$0","isPrimitive","isObject","require$$1","hasOwnProp","require$$2","format","require$$3","validate_1","opts","options","sep","TypeError","hasProp","has","v","props","i","len","length","isArray","copy","validate","require$$4","defaults","require$$5","require$$6","main","value","path","isStr","err","arguments","split","factory_1","deepHasProp","factory","lib"],"mappings":";;4sBAsBA,IAAIA,EAAWC,EAAsCC,YACjDC,EAAWC,EACXC,EAAaC,EACbC,EAASC,EAwCb,IAAAC,EAhBA,SAAmBC,EAAMC,GACxB,OAAMR,EAAUQ,GAGXN,EAAYM,EAAS,SACzBD,EAAKE,IAAMD,EAAQC,KACbZ,EAAUU,EAAKE,MACb,IAAIC,UAAWN,EAAQ,QAAS,MAAOG,EAAKE,MAG9C,KARC,IAAIC,UAAWN,EAAQ,QAASI,iBC7BrCG,EAAUb,EAgCd,IAAAc,EAnBA,SAAsBC,EAAGC,GACxB,IACIC,EADAC,EAAMF,EAAMG,OAEhB,GAAa,IAARD,EACJ,OAAO,EAER,IAAMD,EAAI,EAAGA,EAAIC,EAAKD,IAAM,CAC3B,IAAKJ,EAASE,EAAGC,EAAMC,IAGtB,OAAO,EAFPF,EAAIA,EAAGC,EAAOC,IAKhB,OAAO,GC1BJlB,EAAWC,EAAsCC,YACjDmB,EAAUjB,EACVG,EAASD,EACTgB,EAAOd,EACPe,EAAWC,EACXC,EAAWC,EACXX,EAAMY,EA2FV,IAAAC,EA/BA,SAAsBC,EAAOC,EAAMnB,GAClC,IAAIoB,EACAd,EACAP,EACAsB,EAGJ,KADAD,EAAQ/B,EAAU8B,MACFT,EAASS,GACxB,MAAM,IAAIjB,UAAWN,EAAQ,QAASuB,IAGvC,GADApB,EAAOY,EAAMG,GACRQ,UAAUb,OAAS,IACvBY,EAAMT,EAAUb,EAAMC,IAErB,MAAMqB,EAGR,OAAKH,MAAAA,IAIJZ,EADIc,EACID,EAAKI,MAAOxB,EAAKE,KAEjBkB,EAEFf,EAAKc,EAAOZ,KC3FhBjB,EAAWC,EAAsCC,YACjDmB,EAAUjB,EACVG,EAASD,EACTgB,EAAOd,EACPe,EAAWC,EACXC,EAAWC,EACXX,EAAMY,EAkEV,IAAAQ,EA7CA,SAAkBL,EAAMnB,GACvB,IAAIoB,EACAd,EACAP,EACAsB,EAEJ,KADAD,EAAQ/B,EAAU8B,MACFT,EAASS,GACxB,MAAM,IAAIjB,UAAWN,EAAQ,QAASuB,IAGvC,GADApB,EAAOY,EAAMG,GACRQ,UAAUb,OAAS,IACvBY,EAAMT,EAAUb,EAAMC,IAErB,MAAMqB,EAQR,OAJCf,EADIc,EACID,EAAKI,MAAOxB,EAAKE,KAEjBkB,EAEFM,EAaP,SAASA,EAAaP,GACrB,OAAKA,MAAAA,GAGEd,EAAKc,EAAOZ,KCjBrBmB,EAAAhC,EACAiC,EAAA/B,EAFAL,EAOAmC,EAAA,UAAAC,GAKA,IAAAC,EAAAF"}